// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using anketdeneme.Models;

#nullable disable

namespace anketdeneme.Migrations
{
    [DbContext(typeof(RepoDbContext))]
    partial class RepoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("anketdeneme.Models.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");
                });

            modelBuilder.Entity("anketdeneme.Models.Memnuniyet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MemnuniyetDerecesi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Memnuniyets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MemnuniyetDerecesi = "Çok Memnunum"
                        },
                        new
                        {
                            Id = 2,
                            MemnuniyetDerecesi = "Memnunum"
                        },
                        new
                        {
                            Id = 3,
                            MemnuniyetDerecesi = "Nötrüm"
                        },
                        new
                        {
                            Id = 4,
                            MemnuniyetDerecesi = "Memnun Değilim"
                        },
                        new
                        {
                            Id = 5,
                            MemnuniyetDerecesi = "Hiç Memnun Değilim"
                        },
                        new
                        {
                            Id = 6,
                            MemnuniyetDerecesi = "Memnun Değilim"
                        });
                });

            modelBuilder.Entity("anketdeneme.Models.Sorular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Departman")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemnuniyetID")
                        .HasColumnType("int");

                    b.Property<string>("MesajKutusu")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("MemnuniyetID");

                    b.ToTable("Sorulars");
                });

            modelBuilder.Entity("anketdeneme.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("anketdeneme.Models.Sorular", b =>
                {
                    b.HasOne("anketdeneme.Models.Memnuniyet", "Memnuniyet")
                        .WithMany("Sorulars")
                        .HasForeignKey("MemnuniyetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Memnuniyet");
                });

            modelBuilder.Entity("anketdeneme.Models.Users", b =>
                {
                    b.HasOne("anketdeneme.Models.AppRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("anketdeneme.Models.AppRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("anketdeneme.Models.Memnuniyet", b =>
                {
                    b.Navigation("Sorulars");
                });
#pragma warning restore 612, 618
        }
    }
}
